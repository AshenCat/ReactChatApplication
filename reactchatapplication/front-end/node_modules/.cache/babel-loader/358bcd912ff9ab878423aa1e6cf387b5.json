{"ast":null,"code":"var _jsxFileName = \"/home/itbel/ReactChatApplication/reactchatapplication/front-end/src/Components/Landing.js\";\nimport React from \"react\";\nimport { Form, Button, InputGroup, Container, Row, Col } from \"react-bootstrap\";\nimport RoomList from \"./RoomList\";\nimport Room from \"./ChatRoom/Room\";\nimport { socket } from \"../App\";\nimport NotificationSystem from \"react-notification-system\";\nimport Login from \"./Admin/Login\";\nexport default class Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.notificationSystem = React.createRef();\n\n    this.addNotification = event => {\n      event.preventDefault();\n      const notification = this.notificationSystem.current;\n\n      if (this.state.name === undefined || this.state.name === \"\") {\n        console.log(\"Name must be set.\");\n        notification.addNotification({\n          message: \"Please enter a username.\",\n          //message to be displayed\n          level: \"warning\" //type of notification (success, error, warning, info)\n\n        });\n      } else if (this.state.selectedRoom === undefined || this.state.selectedRoom === \"\") {\n        console.log(\"Room must be set.\");\n        notification.addNotification({\n          message: \"Please select a room to join.\",\n          level: \"warning\"\n        });\n      } else {\n        this.setState({\n          navLocation: \"NameSet\",\n          userList: [...this.state.userList, this.state.name]\n        }, () => {\n          let message = {\n            room: this.state.selectedRoom,\n            name: this.state.name\n          };\n          console.log(`user ${message.name} is joining ${message.room}`);\n          socket.emit(\"usersListUpdate\", message);\n        });\n      }\n    };\n\n    this.selectionMade = roomChange => {\n      this.setState({\n        selectedRoom: roomChange\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.sendLastEmit = () => {\n      socket.emit(\"user-disconnect\", {\n        name: this.state.name,\n        room: this.state.selectedRoom\n      });\n    };\n\n    this.onEnterKey = e => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        this.addNotification();\n      }\n    };\n\n    this.setLocLogin = () => {\n      this.setState({\n        navLocation: \"loginScreen\"\n      });\n    };\n\n    this.whichToRender = () => {\n      if (this.state.navLocation === \"\") {\n        return /*#__PURE__*/React.createElement(Container, {\n          className: \"landingContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          className: \"float-right\",\n          sm: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"sm\",\n          variant: \"dark\",\n          onClick: this.setLocLogin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        }, \"Admin Panel\")), /*#__PURE__*/React.createElement(Row, {\n          className: \"justify-content-md-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"display-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }\n        }, \"Chat Application\")), /*#__PURE__*/React.createElement(Row, {\n          className: \"row justify-content-center\",\n          sm: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(InputGroup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, \"Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n          onKeyDown: this.onEnterKey,\n          onChange: this.handleChange,\n          type: \"text\",\n          placeholder: \"Enter Username\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: this.addNotification,\n          variant: \"dark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, \"Enter Room!\"), /*#__PURE__*/React.createElement(NotificationSystem, {\n          ref: this.notificationSystem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"row justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }\n        }, \"Selected Room: \", this.state.selectedRoom)), /*#__PURE__*/React.createElement(Row, {\n          className: \"row justify-content-center\",\n          sm: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(RoomList, {\n          onRoomSelect: this.selectionMade,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }\n        })))));\n      } else if (this.state.navLocation === \"NameSet\") {\n        console.log(this.state.navLocation);\n        return /*#__PURE__*/React.createElement(Room, {\n          name: this.state.name,\n          selectedRoom: this.state.selectedRoom,\n          userList: this.state.userList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }\n        });\n      } else if (this.state.navLocation === \"loginScreen\") {\n        return /*#__PURE__*/React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      selectedRoom: undefined,\n      name: undefined,\n      navLocation: \"\",\n      userList: []\n    };\n  }\n  /*Notification system module by Igor Prado, displays messages to the user\n  telling them to enter username/select a room\n  */\n\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.sendLastEmit);\n  }\n\n  componentWillUnmount() {\n    this.sendLastEmit();\n    window.removeEventListener(\"beforeunload\", this.sendLastEmit);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(this.whichToRender, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/itbel/ReactChatApplication/reactchatapplication/front-end/src/Components/Landing.js"],"names":["React","Form","Button","InputGroup","Container","Row","Col","RoomList","Room","socket","NotificationSystem","Login","Landing","Component","constructor","props","notificationSystem","createRef","addNotification","event","preventDefault","notification","current","state","name","undefined","console","log","message","level","selectedRoom","setState","navLocation","userList","room","emit","selectionMade","roomChange","handleChange","target","value","sendLastEmit","onEnterKey","e","key","shiftKey","setLocLogin","whichToRender","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,GAA9C,EAAmDC,GAAnD,QAA8D,iBAA9D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAanBC,kBAbmB,GAaEhB,KAAK,CAACiB,SAAN,EAbF;;AAAA,SAcnBC,eAdmB,GAcAC,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,YAAY,GAAG,KAAKL,kBAAL,CAAwBM,OAA7C;;AACA,UAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoBC,SAApB,IAAiC,KAAKF,KAAL,CAAWC,IAAX,KAAoB,EAAzD,EAA6D;AAC3DE,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,QAAAA,YAAY,CAACH,eAAb,CAA6B;AAC3BU,UAAAA,OAAO,EAAE,0BADkB;AACU;AACrCC,UAAAA,KAAK,EAAE,SAFoB,CAET;;AAFS,SAA7B;AAID,OAND,MAMO,IACL,KAAKN,KAAL,CAAWO,YAAX,KAA4BL,SAA5B,IACA,KAAKF,KAAL,CAAWO,YAAX,KAA4B,EAFvB,EAGL;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,QAAAA,YAAY,CAACH,eAAb,CAA6B;AAC3BU,UAAAA,OAAO,EAAE,+BADkB;AAE3BC,UAAAA,KAAK,EAAE;AAFoB,SAA7B;AAID,OATM,MASA;AACL,aAAKE,QAAL,CACE;AACEC,UAAAA,WAAW,EAAE,SADf;AAEEC,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKV,KAAL,CAAWU,QAAf,EAAyB,KAAKV,KAAL,CAAWC,IAApC;AAFZ,SADF,EAKE,MAAM;AACJ,cAAII,OAAO,GAAG;AACZM,YAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWO,YADL;AAEZN,YAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAFL,WAAd;AAIAE,UAAAA,OAAO,CAACC,GAAR,CAAa,QAAOC,OAAO,CAACJ,IAAK,eAAcI,OAAO,CAACM,IAAK,EAA5D;AACAzB,UAAAA,MAAM,CAAC0B,IAAP,CAAY,iBAAZ,EAA+BP,OAA/B;AACD,SAZH;AAcD;AACF,KAhDkB;;AAAA,SAkDnBQ,aAlDmB,GAkDFC,UAAD,IAAgB;AAC9B,WAAKN,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAEO;AAAhB,OAAd;AACD,KApDkB;;AAAA,SAsDnBC,YAtDmB,GAsDHnB,KAAD,IAAW;AACxB,WAAKY,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEL,KAAK,CAACoB,MAAN,CAAaC;AAArB,OAAd;AACD,KAxDkB;;AAAA,SA0DnBC,YA1DmB,GA0DJ,MAAM;AACnBhC,MAAAA,MAAM,CAAC0B,IAAP,CAAY,iBAAZ,EAA+B;AAC7BX,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADY;AAE7BU,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWO;AAFY,OAA/B;AAID,KA/DkB;;AAAA,SA0EnBY,UA1EmB,GA0ELC,CAAD,IAAO;AAClB,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqB,CAACD,CAAC,CAACE,QAA5B,EAAsC;AACpCF,QAAAA,CAAC,CAACvB,cAAF;AACA,aAAKF,eAAL;AACD;AACF,KA/EkB;;AAAA,SAgFnB4B,WAhFmB,GAgFL,MAAM;AAClB,WAAKf,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAlFkB;;AAAA,SAoFnBe,aApFmB,GAoFH,MAAM;AACpB,UAAI,KAAKxB,KAAL,CAAWS,WAAX,KAA2B,EAA/B,EAAmC;AACjC,4BACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,IAAb;AAAkB,UAAA,OAAO,EAAC,MAA1B;AAAiC,UAAA,OAAO,EAAE,KAAKc,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,eAME,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CANF,eASE,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,EAAE,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,UAAA,SAAS,EAAE,KAAKJ,UADlB;AAEE,UAAA,QAAQ,EAAE,KAAKJ,YAFjB;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAQE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKpB,eAAtB;AAAuC,UAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,eAWE,oBAAC,kBAAD;AAAoB,UAAA,GAAG,EAAE,KAAKF,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,CADF,CATF,eAwBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAxBF,eA2BE,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAmB,KAAKO,KAAL,CAAWO,YAA9B,CADF,CA3BF,eA8BE,oBAAC,GAAD;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,EAAE,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AACE,UAAA,YAAY,EAAE,KAAKM,aADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CA9BF,CADF,CADF;AA0CD,OA3CD,MA2CO,IAAI,KAAKb,KAAL,CAAWS,WAAX,KAA2B,SAA/B,EAA0C;AAC/CN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWS,WAAvB;AACA,4BACE,oBAAC,IAAD;AACE,UAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IADnB;AAEE,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWO,YAF3B;AAGE,UAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWU,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OATM,MASA,IAAI,KAAKV,KAAL,CAAWS,WAAX,KAA2B,aAA/B,EAA8C;AACnD,4BAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KA5IkB;;AAEjB,SAAKT,KAAL,GAAa;AACXO,MAAAA,YAAY,EAAEL,SADH;AAEXD,MAAAA,IAAI,EAAEC,SAFK;AAGXO,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMD;AAED;;;;;AAuDAe,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwC,KAAKT,YAA7C;AACD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,SAAKV,YAAL;AACAQ,IAAAA,MAAM,CAACG,mBAAP,CAA2B,cAA3B,EAA2C,KAAKX,YAAhD;AACD;;AAqEDY,EAAAA,MAAM,GAAG;AACP,wBAAO,yBAAM,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAhJkD","sourcesContent":["import React from \"react\";\nimport { Form, Button, InputGroup, Container, Row, Col } from \"react-bootstrap\";\nimport RoomList from \"./RoomList\";\nimport Room from \"./ChatRoom/Room\";\nimport { socket } from \"../App\";\nimport NotificationSystem from \"react-notification-system\";\nimport Login from \"./Admin/Login\";\n\nexport default class Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRoom: undefined,\n      name: undefined,\n      navLocation: \"\",\n      userList: [],\n    };\n  }\n\n  /*Notification system module by Igor Prado, displays messages to the user\n  telling them to enter username/select a room\n  */\n  notificationSystem = React.createRef();\n  addNotification = (event) => {\n    event.preventDefault();\n    const notification = this.notificationSystem.current;\n    if (this.state.name === undefined || this.state.name === \"\") {\n      console.log(\"Name must be set.\");\n      notification.addNotification({\n        message: \"Please enter a username.\", //message to be displayed\n        level: \"warning\", //type of notification (success, error, warning, info)\n      });\n    } else if (\n      this.state.selectedRoom === undefined ||\n      this.state.selectedRoom === \"\"\n    ) {\n      console.log(\"Room must be set.\");\n      notification.addNotification({\n        message: \"Please select a room to join.\",\n        level: \"warning\",\n      });\n    } else {\n      this.setState(\n        {\n          navLocation: \"NameSet\",\n          userList: [...this.state.userList, this.state.name],\n        },\n        () => {\n          let message = {\n            room: this.state.selectedRoom,\n            name: this.state.name,\n          };\n          console.log(`user ${message.name} is joining ${message.room}`);\n          socket.emit(\"usersListUpdate\", message);\n        }\n      );\n    }\n  };\n\n  selectionMade = (roomChange) => {\n    this.setState({ selectedRoom: roomChange });\n  };\n\n  handleChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  sendLastEmit = () => {\n    socket.emit(\"user-disconnect\", {\n      name: this.state.name,\n      room: this.state.selectedRoom,\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.sendLastEmit);\n  }\n\n  componentWillUnmount() {\n    this.sendLastEmit();\n    window.removeEventListener(\"beforeunload\", this.sendLastEmit);\n  }\n\n  onEnterKey = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      this.addNotification();\n    }\n  };\n  setLocLogin = () => {\n    this.setState({ navLocation: \"loginScreen\" });\n  };\n\n  whichToRender = () => {\n    if (this.state.navLocation === \"\") {\n      return (\n        <Container className=\"landingContainer\">\n          <Col>\n            <Row className=\"float-right\" sm={1}>\n              <Button size=\"sm\" variant=\"dark\" onClick={this.setLocLogin}>\n                Admin Panel\n              </Button>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <h1 className=\"display-5\">Chat Application</h1>\n            </Row>\n            <Row className=\"row justify-content-center\" sm={2}>\n              <InputGroup>\n                <InputGroup.Text>Name:</InputGroup.Text>\n                <Form.Control\n                  onKeyDown={this.onEnterKey}\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"Enter Username\"\n                />\n                <Button onClick={this.addNotification} variant=\"dark\">\n                  Enter Room!\n                </Button>\n                <NotificationSystem ref={this.notificationSystem} />\n              </InputGroup>\n            </Row>\n            <Row>\n              <br />\n            </Row>\n            <Row className=\"row justify-content-center\">\n              <b>Selected Room: {this.state.selectedRoom}</b>\n            </Row>\n            <Row className=\"row justify-content-center\" sm={3}>\n              <Col>\n                <RoomList\n                  onRoomSelect={this.selectionMade}\n                ></RoomList>\n              </Col>\n            </Row>\n          </Col>\n        </Container>\n      );\n    } else if (this.state.navLocation === \"NameSet\") {\n      console.log(this.state.navLocation);\n      return (\n        <Room\n          name={this.state.name}\n          selectedRoom={this.state.selectedRoom}\n          userList={this.state.userList}\n        />\n      );\n    } else if (this.state.navLocation === \"loginScreen\") {\n      return <Login />;\n    }\n  };\n  render() {\n    return <this.whichToRender />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}